^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Selection and projection query
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
What are the titles of the books that the user with username aapple has checked out? (by username)

(SELECT title
FROM Makes_Reservation_or_Rental mror, Rental_Due_On r, Has_Books h, Members m
WHERE mror.rental_id = r.rental_id AND m.member_id = mror.member_id AND h.isbn = r.isbn AND m.username = 'aapple');
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Join query
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

What books due I have overdue? (by username)

select h.title
from Makes_Reservation_Or_Rental mror, Members m, Rental_Due_On r, Has_Books h
where mror.rental_id = r.rental_id AND m.member_id = mror.member_id AND r.isbn = h.isbn AND r.end_date < (select CURRENT_TIMESTAMP from DUAL) AND m.username = 'aapple';

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

===================================================================================================================
Division query
===================================================================================================================

What are the titles of the books that are at all branches?

(SELECT DISTINCT h1.title
FROM Has_Books h1
WHERE NOT EXISTS (SELECT NULL
		  FROM Branches b
		  WHERE NOT EXISTS (SELECT NULL
				    FROM Has_Books h2
				    WHERE h1.isbn=h2.isbn AND b.branch_id=h2.branch_id))
ORDER BY h1.title ASC);
===================================================================================================================

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Aggregation query
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Pick one query that requires the use of aggregation (min, max, average, or count are all fine).

How many copies of book X does branch Y have?

SELECT COUNT(*)
FROM Book_Copy c, Has_Books b
WHERE c.isbn = b.isbn AND b.title = X AND c.branch_id = Y

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Nested aggregation with group-by
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

Pick one query that finds the average for each group
and then finds either the minimum or maximum across all those averages.

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

###################################################################################################################
Delete operation
###################################################################################################################

Implement a cascade-on-delete situation

###################################################################################################################

*******************************************************************************************************************
Update operation:
*******************************************************************************************************************

Implement a constraint using the check statement

*******************************************************************************************************************
